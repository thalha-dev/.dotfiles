#################################
#            FADDING            #
#################################
fading = false;

# fade-in-step = 0.09;
# fade-out-step = 0.08;

# This value represents the time between steps in fade steps, in milliseconds
# fade-delta = 20;
# 
# fade-exclude = [ "class_g = 'mpv'" ];

# This option allows Picom not to create any fade on windows opening or closing.
#
# no-fading-openclose = true;

shadow = false;
#################################
#         ROUNDED CORNER        #
#################################

corner-radius = 7

rounded-corners-exclude = [
  # "_NET_WM_WINDOW_TYPE@[0]:a = '_NET_WM_WINDOW_TYPE_DOCK'",
  # "_NET_WM_WINDOW_TYPE@:a *= 'MENU'",
  "class_i = 'polybar'",
  "class_g = 'Polybar'",
  "class_g = 'xfce4-panel'",
  "class_g = 'Xfce4-panel'"
];


#################################
#            OPACITY            #
#################################


# the following value describes the opacity of inactive windows.
#
# inactive-opacity = 0.8;
#
# On the other hand, it is possible to declare a default opacity for active windows.
#
# active-opacity = 1;
#
# This however describes the opacity of window titlebars and borders.
#
# frame-opacity = 1.0;
#
# menu-opacity describes the opacity for dropdown menus and popup menus.
#
# menu-opacity = 0.9;
#
# inactive-opacity-override allows the user to let inactive opacity set by -i override the ~_NET_WM_OPACITY_ values of windows.
#
# inactive-opacity-override = true;
#
# While it is possible to alter opacity on inactive windows, it is also possible to dim them.
#
# inactive-dim = 1.0
#
# It is also possible to use a fixed inactive dim value, instead of adjusting according to window opacity.
#
# inactive-dim-fixed = 1.0

# mark-ovredir-focused = false

# Specify a list of conditions of windows that should never be considered focused.
focus-exclude = [ 
    "class_g = 'Cairo-clock'",
    "x = 0 && y = 0 && override_redirect = true"
];

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.

opacity-rule = [
    "100:class_g = 'rofi'",
    "100:class_g = 'Rofi'",
    "100:class_g = 'Alacritty'",
    "100:class_g = 'Alacritty'",
    "100:class_g = 'kitty'",
    "100:class_g = 'kitty'",
    "100:class_g = 'org.wezfurlong.wezterm'",
    "100:class_g = 'org.wezfurlong.wezterm'",
    "100:class_g = 'google-chrome'",
    "100:class_g = 'Google-chrome'",
    "100:class_g = 'sxiv'",
    "100:class_g = 'Sxiv'",
    "100:class_g = 'code'",
    "100:class_g = 'Code'",
    "100:class_g = 'zoom '",
    "100:class_g = 'zoom '",
    "100:class_g = 'cheese'",
    "100:class_g = 'Cheese'",
    "100:class_g = 'eog'",
    "100:class_g = 'Eog'",
    "100:class_g = 'totem'",
    "100:class_g = 'Totem'",
    "100:class_g = 'org.gnome.Software'",
    "100:class_g = 'Org.gnome.Software'",
    "100:class_g = 'libreoffice'",
    "100:class_g = 'libreoffice-startcenter'",
    "100:class_g = 'nitrogen'",
    "100:class_g = 'Nitrogen'",
    "100:class_g = 'org.pwmt.zathura'",
    "100:class_g = 'Zathura'",
    "100:class_g = 'gl'",
    "100:class_g = 'mpv'",
    "100:class_g = 'Sxiv' && focused",
    "90:class_g = 'Polybar'",
    "90:class_g = 'polybar'",
    "90:class_g = 'Notification'",
    "90:class_g = 'Docky'",
    "70:class_g = 'Conky'",
    "70:class_g = 'dockbarx'",
    "70:class_g = 'Cairo-dock'",
    "70:class_g = 'Xfce4-notifyd'",
    "70:class_g = 'Xfce4-power-manager'",
    "70:class_g = 'Notify-osd'",
    "70:class_g = 'Thunar'",
    "70:class_g = 'Thunar'",
    "88:class_g = 'xfce4-panel'",
    "88:class_g = 'Xfce4-panel'"
];




#################################
#     Background-Blurring       #
#################################


blur-method = "dual_kawase";
blur-strength = 2;


blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "_GTK_FRAME_EXTENTS@:c"
];

#################################
#       General Settings        #
#################################

# Enable remote control via D-Bus. See the man page for more details.
dbus = false

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
backend = "glx"
# backend = "xrender";


# Enable/disable VSync.
# vsync = false
vsync = true;

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
#
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
detect-rounded-corners = true;

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
#
detect-client-opacity = true;

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
#
detect-transient = true;

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. This usually means windows from the same application
# will be considered focused or unfocused at the same time.
# 'WM_TRANSIENT_FOR' has higher priority if detect-transient is enabled, too.
#
detect-client-leader = true
# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter.
# If using the "TRACE" log level, it's better to log into a file
# using *--log-file*, since it can generate a huge stream of logs.
#
# log-level = "debug"
log-level = "warn";

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr.
# Otherwise, logs will to written to the given file, though some of the early
# logs might still be written to the stderr.
# When setting this option from the config file, it is recommended to use an absolute path.
#
# log-file = "/path/to/your/log/file"

# Show all X errors (for debugging)
# show-all-xerrors = false

# Write process ID to a file.
# write-pid-path = "/path/to/your/log/file"

# Window type settings
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   clip-shadow-above:::
#     Controls wether shadows that would have been drawn above the window should
#     be clipped. Useful for dock windows that should have no shadow painted on top.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};



#################################
#              GLX              #
#################################

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.
# Might cause incorrect opacity when rendering transparent content (but never
# practically happened) and may not work with blur-background.
# My tests show a 15% performance boost. Recommended.
#
glx-no-stencil = true

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes,
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
#
# glx-no-rebind-pixmap = true

